#summary HOW-TO compile sylverant project in a Cygwin environment
#labels Phase-Deploy

= Introduction =

The objective of this guide is to help any user to get a full running Sylverant PSO server running in a Windows environment using Cygwin.

To have success on it, you need a minimum Unix level.
I.e: know how to get a SVN copy, and how to use make tools and a little about MySQL.

*Last update:* 2 July 2011

= Steps =

You will need *Cygwin 1.7* or a newer version. Latest Cygwin DLL release version is 1.7.7-1. Get the latest Cygwin here: http://cygwin.com/install.html

== Compile phase ==

1. Install Cygwin and add the following packages (with their dependencies):

*autotools automake libtool openssl openssl-devel readline gettext-devel gcc-core gcc-g++ make libiconv libxml2*


2.1. MYSQL Server side:

You can install a MySQL Server in your normal environment (Windows I suppose...) and on the same machine or on a remote one. Using cygwin as server doesn't work.

2.2. MySQL Client side:

Get MySQL source code (tested with version 5.1.57).
[http://dev.mysql.com/downloads/mysql/5.1.html]

Extract sources to: /usr/local/

{{{
./configure --without-server --without-readline --without-libedit CFLAGS=-O2
make
make install
}}}

*Multi-language server support*

If you want to have your server messages in other languages than English, you need to install the *mini18n* project:
{{{
cd /usr/local
svn co https://yabause.svn.sourceforge.net/svnroot/yabause/trunk/mini18n minii18n
sh autogen.sh
./configure
make
make install
}}}

3. Grab latest SVN version of sylverant:
{{{
cd /usr/local
svn co http://sylverant.googlecode.com/svn sylverant
}}}

4. Compile libsylverant (needed for the rest of packages).
{{{
cd sylverant/trunk/libsylverant
autoreconf --install
./configure
make all
make install
}}}

5. Compile login_server.
{{{
cd sylverant/trunk/login_server
autoreconf --install
CFLAGS="-I/usr/local/include" LDFLAGS="-L/usr/local/lib" ./configure
make all
make install
}}}
Note: If you compiled mini18n, sylverant will create a l10n folder inside share/sylverant.

6. Compile patch_server.
{{{
cd sylverant/trunk/patch_server (Needed for PSO PC Players).
autoreconf --install
CFLAGS="-I/usr/local/include" LDFLAGS="-L/usr/local/lib" ./configure
make all
make install
}}}

7. Compile ship_server.
{{{
cd sylverant/trunk/ship_server
touch config.rpath (seems to correct automake 1.10 bug)
autoreconf --install
CFLAGS="-I/usr/local/include" LDFLAGS="-L/usr/local/lib" ./configure
make all
make install
}}}

8. Compile shipgate.
{{{
cd sylverant/trunk/shipgate
autoreconf --install
CFLAGS="-I/usr/local/include" LDFLAGS="-L/usr/local/lib" ./configure
make all
make install
}}}


== Configure phase ==

9. Create config structure:
  * Create *"sylverant"* folder inside /usr/local/share/
  * Create *"config"* folder inside /usr/local/share/sylverant
  * Put the 5 XML files inside config folder (ship_config.xml, quests.xml, gms.xml, sylverant_config.xml (copy over legits.xml from ship_server) ).
  * Create *"keys"* folder.
  * Create *"info"* folder.

  * Optional: Create text files inside info folder (about.txt, bugs.txt and bugreport.txt)
  * Optional: Create *"patches"* folder.
  * Optional: Create "patch_welcome" file (no extension) inside config folder.

10. Edit XML data:

See [ConfiguringSylverantShips] for information about how to configure Sylverant Ship Server.

See [ConfiguringSylverant] for information about how to configure Sylverant Login/Patch Server and Shipgate.

See [ConfiguringQuests] for information about how to configure Sylverant Quests.

11. Create the "pso" database and their tables in the *MySQL* server (you can use the SQL script).

See [DatabaseLayout] for information about the layout of the tables in Sylverant.

*Tip:* Use Cygwin to connect to your MySQL server like:
{{{
mysql -h 127.0.0.1 -uroot -psomepass (pso < psoscript.sql)
}}}

12. For every PSO PC user, you have to add it to the database:

{{{
mysql> INSERT INTO guildcards VALUES (idcard,idaccount);
mysql> INSERT INTO pc_clients VALUES (idcard,"serial","key");
}}}

See [FAQs] for more information about how to add a PSOPC player.

13. Generate Server Key:

{{{
shipkey_gen.exe
}}}

It will create a new entry inside ship_data table.

14. Copy *ship_key.bin* file inside keys folder.

15. Remember to open your Router / Firewall ports! A range 9000-12100 TCP/UDP is more than enough for DC, PC and GC players.

== Execute phase ==

Time to start our server!

*IMPORTANT* Execute the programs in the following order: login_server.exe, shipgate.exe, ship_server.exe, patch_server.exe

By default, the programs execute in daemon mode. If you want to see log messages, use *--nodaemon* argument.

16. Start the *login_server*:

{{{
$ login_server.exe
[2010:04:18: 16:46:42.515]: Connecting to the database...
[2010:04:18: 16:46:42.515]: Opening Dreamcast port (9200) for connections.
[2010:04:18: 16:46:42.515]: Opening PC port (9300) for connections.
[2010:04:18: 16:46:42.515]: Opening GC port (9100) for connections.
}}}

*Developer Tip:* If you want to know what commands mean, take a look at login_packets.h


17. Start the *shipgate*:

{{{
$ shipgate.exe
[2010:04:18: 16:46:42.515]: Connecting to the database...
[2010:04:18: 16:46:42.515]: Setting session wait_timeout...
[2010:04:18: 16:46:42.515]: Clearing online ships...
}}}

18. Start the *ship_server*:

{{{
$ ship_server.exe
[2010:04:18: 16:04:58.562]: Loading Sylverant Ship configuration file...
[2010:04:18: 16:04:58.567]: Ok
[2010:04:18: 16:04:58.567]: Configured parameters:
[2010:04:18: 16:04:58.567]: Shipgate IP: 192.168.0.2
[2010:04:18: 16:04:58.568]: Shipgate Port: 3455
[2010:04:18: 16:04:58.568]: Number of Ships: 1
[2010:04:18: 16:04:58.568]: Ship Name: A random name
[2010:04:18: 16:04:58.568]: Ship IP: use.public.ip
[2010:04:18: 16:04:58.568]: Base Port: 12001
[2010:04:18: 16:04:58.568]: Blocks: 2
[2010:04:18: 16:04:58.568]: Event: 0
[2010:04:18: 16:04:58.568]: Experience Rate: 100.000000
[2010:04:18: 16:04:58.568]: Weapon drop rate: 30.000000
[2010:04:18: 16:04:58.568]: Armor drop rate: 20.000000
[2010:04:18: 16:04:58.569]: Mag drop rate: 0.000100
[2010:04:18: 16:04:58.569]: Tool drop rate: 50.000000
[2010:04:18: 16:04:58.569]: Meseta drop rate: 40.000000

[2010:04:18: 16:04:58.727]: Starting server for ship A random name...
[2010:04:18: 16:04:58.729]: Loading shipgate key...
[2010:04:18: 16:04:58.731]: Connecting to shipgate...
}}}

  * If it says: Connection refused
    * Shipgate is OFF (turn ON)
    * Server does not found the IP
    * The port is not 3455 (use 3455)
  * If it says: SHIPNAME: Lost connection with shipgate, the ship_gate does not have the key file.

19. Optional: Start the *patch_server*:

{{{
$ patch_server.exe
[2010:04:19: 21:09:55.703]: Loading Sylverant configuration file... 
[2010:04:19: 21:09:55.704]: Ok
[2010:04:19: 21:09:55.704]: Configured parameters:
[2010:04:19: 21:09:55.705]: Server (bound) IP: use.public.ip
[2010:04:19: 21:09:55.705]: Loading welcome message file... 
[2010:04:19: 21:09:55.723]: Ok (13 bytes)
[2010:04:19: 21:09:55.723]: Building patch list...
[2010:04:19: 21:09:55.724]: Ok
[2010:04:19: 21:09:55.724]: Installing SIGUSR1 handler... 
[2010:04:19: 21:09:55.724]: Ok
}}}

  * If it says: bind: Cannot assign requested address, it means that it is reading the external IP from sylverant_config.xml. It has to be a private IP.
{{{  <server addr="use.internal.ip" port="12000" netmask="255.255.255.0" override="use.public.ip"/> }}}