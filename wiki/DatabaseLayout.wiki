#summary The current layout of the database for Sylverant.
#labels Phase-Deploy,Phase-Design,Phase-Implementation

= Introduction =
The database for Sylverant (needed on login servers and shipgates) consists of several tables. This page details the current layout of the database and provides the CREATE TABLE statements needed to create each table. Please note, these are all subject to change, and some have already changed several times.

= Table account_data =
The account_data table contains information on registered users of the server. The create table used is as follows:

{{{
CREATE TABLE `account_data` (
  `account_id` int(11) NOT NULL auto_increment,
  `username` varchar(18) collate latin1_general_ci NOT NULL,
  `password` varchar(33) collate latin1_general_ci NOT NULL,
  `email` varchar(255) collate latin1_general_ci NOT NULL,
  `regtime` int(10) unsigned NOT NULL,
  `isbanned` tinyint(2) NOT NULL default '0',
  `teamid` int(11) NOT NULL default '-1',
  `privlevel` int(10) unsigned NOT NULL default '0',
  `dressflag` tinyint(1) NOT NULL default '0',
  PRIMARY KEY  (`account_id`)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=latin1 COLLATE=latin1_general_ci;
}}}

= Table bans =
The bans table is used for storing information related to a ban. This can be either a guildcard-level or IP level ban.

{{{
CREATE TABLE `bans` (
  `ban_id` int(11) NOT NULL auto_increment,
  `reason` varchar(256) default NULL,
  `startdate` int(10) unsigned NOT NULL default '0',
  `enddate` int(10) unsigned NOT NULL default '4294967295',
  `setby` int(11) default NULL,
  PRIMARY KEY  (`ban_id`),
  KEY `setby` (`setby`),
  CONSTRAINT `bans_ibfk_1` FOREIGN KEY (`setby`) REFERENCES `account_data` (`account_id`) ON DELETE SET NULL ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
}}}

= Trigger ban_start =
This trigger sets the start time of the ban to the current time when the ban is put into place.

{{{
CREATE TRIGGER `ban_start` BEFORE INSERT ON `bans` FOR EACH ROW set new.startdate = UNIX_TIMESTAMP();
}}}

= Table character_data =
The character_data table is used to store character data that is saved with the /save command on the server. It was also used to store Blue Burst character data as well.

{{{
CREATE TABLE `character_data` (
  `guildcard` int(11) NOT NULL,
  `slot` tinyint(4) NOT NULL,
  `data` blob NOT NULL,
  KEY `guildcard` (`guildcard`),
  CONSTRAINT `character_data_ibfk_1` FOREIGN KEY (`guildcard`) REFERENCES `guildcards` (`guildcard`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_general_ci;
}}}

= Table dreamcast_clients =
This table is obviously used to store Dreamcast clients for the server. PC clients now have their own table.

{{{
CREATE TABLE `dreamcast_clients` (
  `guildcard` int(11) NOT NULL,
  `serial_number` char(8) NOT NULL,
  `access_key` char(8) NOT NULL,
  `dc_id` char(8) NOT NULL,
  PRIMARY KEY  (`guildcard`),
  CONSTRAINT `dreamcast_clients_ibfk_1` FOREIGN KEY (`guildcard`) REFERENCES `guildcards` (`guildcard`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
}}}

= Table friendlist =
This table is used for storing friend lists of clients.

{{{
CREATE TABLE `friendlist` (
  `owner` int(11) NOT NULL,
  `friend` int(11) NOT NULL,
  `nickname` varchar(32) default NULL,
  KEY `owner` (`owner`),
  KEY `friend` (`friend`),
  CONSTRAINT `friendlist_ibfk_1` FOREIGN KEY (`owner`) REFERENCES `guildcards` (`guildcard`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `friendlist_ibfk_2` FOREIGN KEY (`friend`) REFERENCES `guildcards` (`guildcard`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
}}}

= Table gamecube_clients=
This table is used to store the serial number and access keys for Gamecube clients on the server.

{{{
CREATE TABLE `gamecube_clients` (
  `guildcard` int(11) NOT NULL,
  `serial_number` char(8) NOT NULL,
  `access_key` char(12) NOT NULL,
  PRIMARY KEY  (`guildcard`),
  CONSTRAINT `gamecube_clients_ibfk_1` FOREIGN KEY (`guildcard`) REFERENCES `guildcards` (`guildcard`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
}}}

= Table guildcard_bans =
This table is used to set bans on a guildcard at the shipgate level.

{{{
CREATE TABLE `guildcard_bans` (
  `ban_id` int(11) NOT NULL,
  `guildcard` int(11) NOT NULL,
  PRIMARY KEY  (`ban_id`),
  KEY `guildcard` (`guildcard`),
  CONSTRAINT `guildcard_bans_ibfk_1` FOREIGN KEY (`ban_id`) REFERENCES `bans` (`ban_id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `guildcard_bans_ibfk_2` FOREIGN KEY (`guildcard`) REFERENCES `guildcards` (`guildcard`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
}}}

= Table guildcards =
This table is used to link accounts to their guildcards.

{{{
CREATE TABLE `guildcards` (
  `guildcard` int(11) NOT NULL auto_increment,
  `account_id` int(11) default NULL,
  PRIMARY KEY  (`guildcard`),
  KEY `account_id` (`account_id`),
  CONSTRAINT `guildcards_ibfk_1` FOREIGN KEY (`account_id`) REFERENCES `account_data` (`account_id`) ON DELETE SET NULL ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=10000 DEFAULT CHARSET=latin1;
}}}

= Table ip_bans =
This table is used to set a ban on an IP address at the shipgate level.

{{{
CREATE TABLE `ip_bans` (
  `ban_id` int(11) NOT NULL,
  `addr` int(10) unsigned NOT NULL,
  PRIMARY KEY  (`ban_id`),
  CONSTRAINT `ip_bans_ibfk_1` FOREIGN KEY (`ban_id`) REFERENCES `bans` (`ban_id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
}}}

= Table online_clients =
This table is used to store a list of currently online clients.

{{{
CREATE TABLE `online_clients` (
  `guildcard` int(11) NOT NULL,
  `name` varchar(32) NOT NULL,
  `ship_id` int(10) unsigned NOT NULL,
  `block` int(10) unsigned NOT NULL,
  `lobby` varchar(32) default NULL,
  `lobby_id` int(10) unsigned default NULL,
  PRIMARY KEY  (`guildcard`),
  KEY `ship_id` (`ship_id`),
  KEY `lobby_id` (`lobby_id`),
  CONSTRAINT `online_clients_ibfk_1` FOREIGN KEY (`guildcard`) REFERENCES `guildcards` (`guildcard`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `online_clients_ibfk_2` FOREIGN KEY (`ship_id`) REFERENCES `online_ships` (`ship_id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
}}}

= Table online_ships =
This one is actually used, and contains the list of currently online ships.

{{{
CREATE TABLE `online_ships` (
  `name` varchar(12) collate latin1_general_ci NOT NULL,
  `players` int(11) NOT NULL default '0',
  `ip` int(10) unsigned NOT NULL,
  `port` smallint(5) unsigned NOT NULL,
  `int_ip` int(10) unsigned NOT NULL,
  `ship_id` int(10) unsigned NOT NULL,
  `gm_only` tinyint(1) NOT NULL default '0',
  `games` int(11) NOT NULL default '0',
  `menu_code` int(11) NOT NULL default '0',
  `flags` int(10) unsigned NOT NULL default '0',
  `ship_number` int(10) unsigned NOT NULL default '0',
  `ship_ip6_high` bigint(20) unsigned default NULL,
  `ship_ip6_low` bigint(20) unsigned default NULL,
  `protocol_ver` int(10) unsigned NOT NULL,
  PRIMARY KEY  (`ship_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_general_ci;
}}}

= Table passwd_resets =
This table is used by the website to manage requests for a password reset.

{{{
CREATE TABLE `passwd_resets` (
  `account_id` int(11) NOT NULL,
  `uuid` char(36) NOT NULL,
  `req_time` timestamp NOT NULL default CURRENT_TIMESTAMP,
  PRIMARY KEY  (`account_id`),
  CONSTRAINT `passwd_resets_ibfk_1` FOREIGN KEY (`account_id`) REFERENCES `account_data` (`account_id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
}}}

= Table pc_clients =
This table is used to store the serial number and access key for PC clients.

{{{
CREATE TABLE `pc_clients` (
  `guildcard` int(11) NOT NULL,
  `serial_number` char(8) NOT NULL,
  `access_key` char(8) NOT NULL,
  PRIMARY KEY  (`guildcard`),
  CONSTRAINT `pc_clients_ibfk_1` FOREIGN KEY (`guildcard`) REFERENCES `guildcards` (`guildcard`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
}}}

= Table ship_data =
This table contains the encryption keys of the ships allowed to connect to the shipgate. The main_menu field in here controls whether that key is allowed in the main list of ships (a blank menu code).

{{{
CREATE TABLE `ship_data` (
  `rc4key` tinyblob NOT NULL,
  `idx` int(11) NOT NULL auto_increment,
  `main_menu` tinyint(3) unsigned NOT NULL default '0',
  `ship_number` int(10) unsigned NOT NULL,
  `memo` varchar(256) collate latin1_general_ci default NULL,
  PRIMARY KEY  (`idx`)
) ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=latin1 COLLATE=latin1_general_ci;
}}}

= Table user_options =
This table contains options that have been set by users. Each option has its own format, so a tinyblob is used to make sure we can store anything (up to 255 bytes, anyway).

{{{
CREATE TABLE `user_options` (
  `guildcard` int(11) NOT NULL,
  `opt` int(10) unsigned NOT NULL,
  `value` tinyblob,
  PRIMARY KEY  (`guildcard`,`opt`),
  CONSTRAINT `user_options_ibfk_1` FOREIGN KEY (`guildcard`) REFERENCES `guildcards` (`guildcard`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
}}}